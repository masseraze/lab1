Script started on 2017å¹´03æœˆ17æ—¥ (é€±äº”) 21æ™‚49åˆ†20ç§’
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m whoami;pwd
pd2vm
/home/pd2vm/Desktop/test/lab1
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git v[Kconfig-[K-l
git: 'config-l' is not a git command. See 'git --help'.
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git config -1
error: unknown switch `1'
usage: git config [options]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-regex]
    --get-all             get all values: key [value-regex]
    --get-regexp          get values for regexp: name-regex [value-regex]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value_regex]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-regex]
    --unset-all           remove all matches: name [value-regex]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    -e, --edit            open an editor
    --get-color <slot>    find the color configured: [default]
    --get-colorbool <slot>
                          find the color setting: [stdout-is-tty]

Type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --path                value is a path (file or directory name)

Other
    -z, --null            terminate values with NUL byte
    --includes            respect include directives on lookup

[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git config-[K -l
user.email=sujason72@gmail.com
user.name=jason876807
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git clone https://github.com/masseraz e/lab1.git
fatal: destination path 'lab1' already exists and is not an empty directory.
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m gd[Kit add .
fatal: Not a git repository (or any of the parent directories): .git
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git commit -m
fatal: Not a git repository (or any of the parent directories): .git
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git init
Initialized empty Git repository in /home/pd2vm/Desktop/test/lab1/.git/
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git add .
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git commit -m
error: switch `m' requires a value
usage: git commit [options] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit hook
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)

[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git commit -m" first" "[C
[master (root-commit) af3f3c4]  first
 4 files changed, 18 insertions(+)
 create mode 100755 a.out
 create mode 100755 lab1
 create mode 100644 lab1.cpp
 create mode 100644 lab1.script
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git push -u origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m dfcsdcsdcsdcs[K[K[K[K[K[K[K[K[K[K[K[K[Kkjjhhhhggggy[K[K[K[K[K[K[K[K[K[K[K[Kgit gi[K[K[K remote add origin git@https://git hub.com/masseraze/lab1.git
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git push 
warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: I don't handle protocol 'git@https'
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git add .
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

	[32mmodified:   lab1.script[m

[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m get [K[K[Kit init
Reinitialized existing Git repository in /home/pd2vm/Desktop/test/lab1/.git/
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git add .
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git commit -m"[K "first "[C[1@ [C[C[C[C[C[C[C
[master 551260b]  first
 1 file changed, 81 insertions(+)
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git status
On branch master
nothing to commit, working directory clean
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git push [K[K[K[K[K[K[K[K[Kgit push
warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.0, Git will default to the more conservative 'simple'
behavior, which only pushes the current branch to the corresponding
remote branch that 'git pull' uses to update the current branch.

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

fatal: I don't handle protocol 'git@https'
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git push -u origin master
fatal: I don't handle protocol 'git@https'
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git co
git: 'co' is not a git command. See 'git --help'.

Did you mean one of these?
	commit
	clone
	log
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git ckeacj[K[K[Kck[K[K[K[Kheckout
M	lab1.script
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m cat scrip [Ktlscriptascriptbscript1script.script
Script started on 2017å¹´03æœˆ17æ—¥ (é€±äº”) 21æ™‚49åˆ†20ç§’
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m whoami;pwd
pd2vm
/home/pd2vm/Desktop/test/lab1
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git v[Kconfig-[K-l
git: 'config-l' is not a git command. See 'git --help'.
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git config -1
error: unknown switch `1'
usage: git config [options]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-regex]
    --get-all             get all values: key [value-regex]
    --get-regexp          get values for regexp: name-regex [value-regex]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value_regex]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-regex]
    --unset-all           remove all matches: name [value-regex]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    -e, --edit            open an editor
    --get-color <slot>    find the color configured: [default]
    --get-colorbool <slot>
                          find the color setting: [stdout-is-tty]

Type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --path                value is a path (file or directory name)

Other
    -z, --null            terminate values with NUL byte
    --includes            respect include directives on lookup

[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git config-[K -l
user.email=sujason72@gmail.com
user.name=jason876807
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git clone https://github.com/masseraz e/lab1.git
fatal: destination path 'lab1' already exists and is not an empty directory.
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m gd[Kit add .
fatal: Not a git repository (or any of the parent directories): .git
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git commit -m
fatal: Not a git repository (or any of the parent directories): .git
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git init
Initialized empty Git repository in /home/pd2vm/Desktop/test/lab1/.git/
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git add .
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git commit -m
error: switch `m' requires a value
usage: git commit [options] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit hook
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)

[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git commit -m" first" "[C
[master (root-commit) af3f3c4]  first
 4 files changed, 18 insertions(+)
 create mode 100755 a.out
 create mode 100755 lab1
 create mode 100644 lab1.cpp
 create mode 100644 lab1.script
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git push -u origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m dfcsdcsdcsdcs[K[K[K[K[K[K[K[K[K[K[K[K[Kkjjhhhhggggy[K[K[K[K[K[K[K[K[K[K[K[Kgit gi[K[K[K remote add origin git@https://git hub.com/masseraze/lab1.git
[01;32mpd2vm@pd2vm-VirtualBox[01;34m ~/Desktop/test/lab1 $[00m git push 
warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

When push.default is set to 'matching', git will push local branches
to the remote branches that already exist with the same name.

In Git 2.